// Copyright 2019 The LUCI Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package luci.resultdb.internal;

import "go.chromium.org/luci/resultdb/proto/v1/instruction.proto";
import "go.chromium.org/luci/resultdb/proto/v1/invocation.proto";

option go_package = "go.chromium.org/luci/resultdb/internal/proto;internalpb";


// ReachableInvocations captures the invocations reachable from a root
// invocation (including the invocation itself). It is stored as a value
// in redis for finalized invocations alongside the ID of that invocation.
message ReachableInvocations {
    message ReachableInvocation {
        // The invocation ID.
        string invocation_id = 1;
        // Whether the invocation has any test results.
        bool has_test_results = 2;
        // Whether the invocation has any test exonerations.
        bool has_test_exonerations = 3;
        // The realm of the invocation.
        string realm = 4;
        // The offset of this invocation's resolved sources
        // in ReachableInvocations.sources.
        // 0 indicates there are no sources, 1 indicates the
        // sources are at ReachableInvocations.sources[0], 2 indicates
        // the sources are at ReachableInvocations.sources[1] and so on.
        int64 source_offset = 5;
        // The instructions for this invocation.
        // It only contains test result instruction, with all content removed.
        luci.resultdb.v1.Instructions instructions = 6;
        // The invocation IDs of invocations included in this invocation.
        repeated string included_invocation_ids = 7;
    }
    // The invocations reachable. This includes the root invocation
    // (the invocation for which this cache entry is) itself.
    repeated ReachableInvocation invocations = 1;

    // The distinct sources in the reachable invocation graph.
    // As many invocations will have the same sources, this
    // is used to reduce the stored size.
    repeated luci.resultdb.v1.Sources sources = 2;
}


