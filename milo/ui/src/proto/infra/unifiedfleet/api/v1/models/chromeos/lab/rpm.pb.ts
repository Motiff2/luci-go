// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v1.176.0
//   protoc               v5.26.1
// source: infra/unifiedfleet/api/v1/models/chromeos/lab/rpm.proto

/* eslint-disable */
import _m0 from "protobufjs/minimal";

export const protobufPackage = "unifiedfleet.api.v1.models.chromeos.lab";

/**
 * Remote power management info.
 * Next Tag: 4
 */
export interface OSRPM {
  readonly powerunitName: string;
  readonly powerunitOutlet: string;
  readonly powerunitType: OSRPM_Type;
}

/**
 * Type of RPM that controls the device
 * Next Tag: 3
 */
export enum OSRPM_Type {
  TYPE_UNKNOWN = 0,
  /** TYPE_SENTRY - Sentry Switched PDU */
  TYPE_SENTRY = 1,
  /** TYPE_IP9850 - IP Power 9850 */
  TYPE_IP9850 = 2,
}

export function oSRPM_TypeFromJSON(object: any): OSRPM_Type {
  switch (object) {
    case 0:
    case "TYPE_UNKNOWN":
      return OSRPM_Type.TYPE_UNKNOWN;
    case 1:
    case "TYPE_SENTRY":
      return OSRPM_Type.TYPE_SENTRY;
    case 2:
    case "TYPE_IP9850":
      return OSRPM_Type.TYPE_IP9850;
    default:
      throw new globalThis.Error("Unrecognized enum value " + object + " for enum OSRPM_Type");
  }
}

export function oSRPM_TypeToJSON(object: OSRPM_Type): string {
  switch (object) {
    case OSRPM_Type.TYPE_UNKNOWN:
      return "TYPE_UNKNOWN";
    case OSRPM_Type.TYPE_SENTRY:
      return "TYPE_SENTRY";
    case OSRPM_Type.TYPE_IP9850:
      return "TYPE_IP9850";
    default:
      throw new globalThis.Error("Unrecognized enum value " + object + " for enum OSRPM_Type");
  }
}

function createBaseOSRPM(): OSRPM {
  return { powerunitName: "", powerunitOutlet: "", powerunitType: 0 };
}

export const OSRPM = {
  encode(message: OSRPM, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {
    if (message.powerunitName !== "") {
      writer.uint32(10).string(message.powerunitName);
    }
    if (message.powerunitOutlet !== "") {
      writer.uint32(18).string(message.powerunitOutlet);
    }
    if (message.powerunitType !== 0) {
      writer.uint32(24).int32(message.powerunitType);
    }
    return writer;
  },

  decode(input: _m0.Reader | Uint8Array, length?: number): OSRPM {
    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseOSRPM() as any;
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.powerunitName = reader.string();
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.powerunitOutlet = reader.string();
          continue;
        case 3:
          if (tag !== 24) {
            break;
          }

          message.powerunitType = reader.int32() as any;
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skipType(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): OSRPM {
    return {
      powerunitName: isSet(object.powerunitName) ? globalThis.String(object.powerunitName) : "",
      powerunitOutlet: isSet(object.powerunitOutlet) ? globalThis.String(object.powerunitOutlet) : "",
      powerunitType: isSet(object.powerunitType) ? oSRPM_TypeFromJSON(object.powerunitType) : 0,
    };
  },

  toJSON(message: OSRPM): unknown {
    const obj: any = {};
    if (message.powerunitName !== "") {
      obj.powerunitName = message.powerunitName;
    }
    if (message.powerunitOutlet !== "") {
      obj.powerunitOutlet = message.powerunitOutlet;
    }
    if (message.powerunitType !== 0) {
      obj.powerunitType = oSRPM_TypeToJSON(message.powerunitType);
    }
    return obj;
  },

  create(base?: DeepPartial<OSRPM>): OSRPM {
    return OSRPM.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<OSRPM>): OSRPM {
    const message = createBaseOSRPM() as any;
    message.powerunitName = object.powerunitName ?? "";
    message.powerunitOutlet = object.powerunitOutlet ?? "";
    message.powerunitType = object.powerunitType ?? 0;
    return message;
  },
};

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

export type DeepPartial<T> = T extends Builtin ? T
  : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;

function isSet(value: any): boolean {
  return value !== null && value !== undefined;
}
